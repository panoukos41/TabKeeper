@using TabKeeper.People
@using TabKeeper.Tabs
@using TabKeeper.UI.People
@using TabKeeper.UI.Tabs

@page "/tabs/{Id}"
@inherits Ignis.Components.IgnisComponentBase

<PageTitle>Home</PageTitle>

<div class="flex flex-col gap-4">
    <div class="flex flex-col gap-2">
        @foreach (var product in Products.Items)
        {
            <ProductCardView ViewModel="product" @key="product.ProductId" />
        }
    </div>

    <div class="flex items-center justify-start gap-2">
        @foreach (var person in People.Items)
        {
            <PersonView ViewModel="person" @key="person.PersonId" />
        }
    </div>

    <button class="btn btn-primary">Test</button>
    <button class="btn btn-secondary">Test</button>
    <button class="btn btn-cancel">Test</button>
</div>

@code {
    private SourceCache<PersonViewModel, Uuid> People { get; } = new(p => p.PersonId);
    private SourceCache<ProductViewModel, Uuid> Products { get; } = new(p => p.ProductId);

    [Parameter]
    public string Id { get; set; }

    public TabPage()
    {
        People.AddOrUpdate([
            new(new() { Id = Uuid.NewUuid(), Name = "Panos" }),
            new(new() { Id = Uuid.NewUuid(), Name = "Ategnatos" }),
            new(new() { Id = Uuid.NewUuid(), Name = "Pantelizer" })
        ]);

        Products.AddOrUpdate([
            new(new() { Id = Uuid.NewUuid(), Name = "Salata", Price = 10 }),
            new(new() { Id = Uuid.NewUuid(), Name = "Xoirino", Price = 20 }),
            new(new() { Id = Uuid.NewUuid(), Name = "Turokafterh", Price = 4 }),
            new(new() { Id = Uuid.NewUuid(), Name = "Patates", Price = 7, Quantity = 2 })
        ]);
    }
}
