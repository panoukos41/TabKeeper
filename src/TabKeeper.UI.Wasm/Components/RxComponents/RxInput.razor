@using System.Diagnostics.CodeAnalysis
@using System.Globalization

@inherits InputBase<T>
@typeparam T where T : IParsable<T>

<input
    @attributes="AdditionalAttributes"
    id="@Id"
    name="@(Name ?? NameAttributeValue)"
    class="@(string.Join(' ', "peer", CssClass))"
    type="@Type"
    placeholder="@Placeholder"
    @bind="CurrentValueAsString" />

@if (!string.IsNullOrEmpty(Label))
{
    <label for="@NameAttributeValue" class="@LabelClass">
        @Label
    </label>
}

<RxErrors FieldIdentifier="FieldIdentifier" ShowErrors="ShowErrors" class="@ErrorClass" />

@code {
    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public bool ShowErrors { get; set; } = true;

    [Parameter]
    public string BindEvent { get; set; } = "onchange";

    /// <inheritdoc />
    protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out T result, [NotNullWhen(false)] out string? validationErrorMessage)
    {
        (result, validationErrorMessage) = (default, null);
        try
        {
            result = T.Parse(value ?? string.Empty, null);
            return true;
        }
        catch (Exception ex)
        {
            validationErrorMessage = ex.Message;
        }
        return false;
    }

    protected override string? FormatValueAsString(T? value)
    {
        return base.FormatValueAsString(value);
    }

    private string Id => GetAttribute("id", NameAttributeValue);

    private string Type => GetAttribute("type", RxInput.Types.Text);

    private string? Placeholder => GetAttribute("placeholder", Label);

    private string? LabelClass => GetAttribute("label-class", null);

    private string? ErrorClass => GetAttribute("error-class", null);

    [return: NotNullIfNotNull(nameof(defaultValue))]
    private string? GetAttribute(string key, string? defaultValue)
        => AdditionalAttributes?.TryGetValue(key, out var value) is true
            ? Convert.ToString(value, CultureInfo.InvariantCulture) ?? defaultValue
            : defaultValue;
}
