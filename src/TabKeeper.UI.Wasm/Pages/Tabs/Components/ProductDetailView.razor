@inherits CoreRxComponent<TabProductViewModel>
@inject TranslateService translate

<div class="space-y-3">
    <div class="flex items-center justify-between">
        <h1 class="m-0">
            @ViewModel.Name
        </h1>
        <Button If="@(!edit)" class="btn btn-primary gap-2 h-10" OnClick="StartEdit">
            <FaSolidPen class="icon-xs" />
        </Button>
    </div>
    @if (edit)
    {
        <ProductForm id="update-product-form" Product="@(ViewModel.Product with { })" OnValidSubmit="ValidSubmit" />
        <div class="flex flex-row-reverse gap-2">
            <Button class="btn btn-primary gap-2 grow" type="submit" form="update-product-form">
                <FaSolidPlus class="icon-sm" />
                <span>@("update" | translate)</span>
            </Button>
            <Button class="btn btn-cancel gap-2 grow" OnClick="CancelEdit">
                <FaSolidX class="icon-xs" />
                <span>@("cancel" | translate)</span>
            </Button>
        </div>
    }
    else
    {
        @foreach (var person in TabViewModel.People.Items)
        {
            var key = person.PersonId.ToString();

            <div class="flex items-center border gap-2 mb-2 rounded bg-primary-container">
                <input id="@key" @key="key" class="ms-4 my-2 rounded-full" type="checkbox" checked="@person.HasProduct(ViewModel)" @onchange="() => person.ToggleProduct(ViewModel)" />
                <label for="@key" class="my-2 me-4 grow cursor-pointer">@person.Name</label>
            </div>
        }
    }
</div>


@* <div class="card space-y-3">
    <div class="pb-1 border-b border-gray-400 flex items-start gap-2">
        <div class="flex gap-2 items-center">
            <FaSolidUtensils class="icon-sm" />
            <h2 class="m-0 p-0">@ViewModel.Name</h2>
        </div>
        <div class="ms-3 flex gap-2 items-center">
            <FaSolidMoneyBill class="icon-sm rotate-90" />
            <p class="text-lg font-semibold">@ViewModel.Price</p>
        </div>
        <Button class="ms-auto" OnClick="OnRemoveClicked">
            <FaSolidTrash class="icon-sm" />
        </Button>
    </div>
    <div class="flex items-center gap-4">
        <div class="flex gap-2 items-center">
            <FaSolidCartShopping class="icon-sm" />
            <p class="text-lg">@ViewModel.Quantity</p>
        </div>
        <div class="flex gap-2 items-center">
            <FaSolidCashRegister class="icon-sm" />
            <p class="text-lg">@ViewModel.Total</p>
        </div>
        <div class="flex gap-2 items-center">
            <FaSolidPeopleGroup class="icon-sm" />
            <p class="text-lg">@ViewModel.Participants</p>
        </div>

        <Button class="ms-auto btn btn-primary p-2" OnClick="() => ViewModel.Quantity -= 1" disabled="@(ViewModel.Quantity <= 1)">
            <FaSolidMinus class="icon-sm" />
        </Button>
        <Button class="btn btn-primary p-2" OnClick="() => ViewModel.Quantity += 1">
            <FaSolidPlus class="icon-sm" />
        </Button>
        <Button class="btn btn-primary p-2" OnClick="OnEditClicked">
            <FaSolidBagShopping class="icon-sm" />
        </Button>
    </div>
</div> *@

@code {
    private bool edit;

    [Parameter, EditorRequired]
    public TabViewModel TabViewModel { get; set; } = null!;

    private void StartEdit()
    {
        edit = true;
        TriggerUpdate();
    }

    private void CancelEdit()
    {
        edit = false;
        TriggerUpdate();
    }

    private void ValidSubmit(TabProduct product)
    {
        ViewModel.Product = product;
        edit = false;
        TriggerUpdate();
    }
}
